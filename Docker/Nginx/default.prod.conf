server {
    listen 80;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /Projects/scanlate-api/public/;
    index index.php index.html index.htm index.nginx-debian.html;
    server_name www.api.scanlate.ru api.scanlate.ru;

    location / {
        return 301 https://api.scanlate.ru$request_uri;
    }
}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # SSL
    ssl_certificate /etc/letsencrypt/live/api.scanlate.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.scanlate.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.scanlate.ru/chain.pem;

    error_log  /dev/stdout info;
    access_log /dev/stdout;
    root /Projects/scanlate-api/public/;
    index index.php index.html index.htm index.nginx-debian.html;
    server_name www.api.scanlate.ru api.scanlate.ru;
	
    gzip on;
    gzip_min_length 1000;
    gzip_types text/plain application/xml;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    client_max_body_size 32m;
    client_body_buffer_size 32m;
    client_body_in_file_only off;

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        set $cors '';
        if ($http_origin ~* 'https?:\/\/(localhost(\:[0-9]+)?|([\w-_]+\.)?([\w-_]+\.)?taklimakan\.network)') {
            set $cors 'true';
        }

        # always is required to add headers even if response's status is 4xx or 5xx
        if ($cors = 'true') {
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, Keep-Alive, Origin, User-Agent, X-Requested-With' always;
            add_header 'Access-Control-Expose-Headers' 'Authorization, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset' always;
        }

        # After practise, I found reflight response must response CORS headers too !
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, Keep-Alive, Origin, User-Agent, X-Requested-With';
            add_header 'Access-Control-Expose-Headers' 'Authorization, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset' always;
            return 204;
        }
    }
}

